# -*- coding: utf-8 -*-
"""impainting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19oRFmEeKcnk9iZylvMoB5Ta2ujwt_7Ab
"""

import numpy as np
import torch
from PIL import Image

"""# Loading the model :"""

from diffusers import StableDiffusionInpaintPipeline
inpainting_model = "runwayml/stable-diffusion-inpainting"
device='cuda'
pipe=StableDiffusionInpaintPipeline.from_pretrained(inpainting_model,torch_dtype=torch.float16).to(device)

!pip install xformers

pipe.enable_attention_slicing()
pipe.enable_xformers_memory_efficient_attention()

def matrix_imgs(imgs, rows=1, col=3, sclae=1):
  assert len(imgs) == rows*col
  w, h = imgs[0].size
  w, h = int(w*sclae), int(h*sclae)
  matrix = Image.new('RGB', (col*w, rows*h))
  matrix_w, matrix_h = matrix.size
  for i, img in enumerate(imgs):
    img = img.resize((w, h), Image.ANTIALIAS)
    matrix.paste(img, box=(i%col*w, i//col*h))
  return matrix

img_path = "/content/bench_img.jpg"

img = Image.open(img_path).convert('RGB')

img





"""#Loading the Mask :"""

img_mask_path = '/content/bench_img_mask.jpg'

img_mask = Image.open(img_mask_path)

img_mask

seed = 777

"""# Creating a Prompt:"""

prompt = ""
generator = torch.Generator(device=device).manual_seed(seed)
result_img = pipe(prompt=prompt, image=img, mask_image=img_mask, generator=generator).images[0]

result_img

"""# exchanging the objects:"""

prompt = " an beautiful electric guitar"
generator = torch.Generator(device=device).manual_seed(seed)
result_img = pipe(prompt=prompt, image=img, mask_image=img_mask, generator=generator).images[0]
result_img

"""# Comparing the Images:"""

prompt = " an bonsai tree"
generator = torch.Generator(device=device).manual_seed(seed)
result_img = pipe(prompt=prompt, image=img, mask_image=img_mask, generator=generator).images[0]
result_img

"""#"""

